@using Zoor_Lebanon.Models
@model Zoor_Lebanon.Models.ViewModels.RegisterViewModel


@{
    Layout = null;
    ViewBag.Title = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Zoor Lebanon - @ViewBag.Title</title>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500;600&family=Roboto&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/enduser/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="~/enduser/css/style.css" rel="stylesheet">

    <style>
        
        .container-fluid {
            position: relative;
            z-index: 2;
        }

        .form-container {
            max-height: 90vh;
            overflow-y: auto;
            width: 100%;
        }

        .form-control {
            color: black !important;
            background-color: white;
        }

        .form-control:focus {
            color: black !important;
            background-color: white;
        }

        .dropdown-menu-checkbox {
            max-height: 200px;
            overflow-y: auto;
        }

        .dropdown-menu-checkbox label {
            margin: 0;
        }

        .register-button {
            margin-top: 40px;
        }

        .form-text {
            display: block; /* Ensure it spans the full width */
            margin-top: 0.5rem; /* Add space between the input and the text */
        }

    </style>
</head>
<body>
    <div class="container-fluid vh-100 p-0 d-flex">
        <!-- Left Section with Background Image and Slogan -->
        <div class="col-6 d-flex align-items-start justify-content-center text-white" style="background-image: url('/enduser/img/signup.jpg'); background-size: cover; background-position: center; background-color: rgba(0, 0, 0, 0.5);">
            <div class="text-center px-5 mt-5">
                <h1 class="display-4 fw-bold">Zoor Lebanon</h1>
                <h3 class="mt-3 fs-5">The Gateway to Lebanon's Hidden Treasures.</h3>
                <h3 class="mt-3 fs-5">Your Journey Awaits.</h3>
            </div>
        </div>


        <!-- Right Section with Registration Fields -->
        <div class="col-6 bg-white d-flex flex-column justify-content-center px-5">
            <h3 class="text-center mb-4">Create Your Account</h3>
            <form method="post" asp-action="Register" class="w-100">
                <div asp-validation-summary="All" class="text-danger"></div>


                <div class="row g-3">
                    <!-- First Name -->
                    <div class="col-md-6">
                        <label for="firstName" class="form-label">First Name</label>
                        <input type="text" id="firstName" name="User.Firstname" class="form-control" placeholder="Enter your first name" required />
                    </div>
                    <!-- Last Name -->
                    <div class="col-md-6">
                        <label for="lastName" class="form-label">Last Name</label>
                        <input type="text" id="lastName" name="User.Lastname" class="form-control" placeholder="Enter your last name" required />
                    </div>
                    <!-- Date of Birth -->
                    <div class="col-md-6">
                        <label for="dob" class="form-label">Date of Birth</label>
                        <input type="date" id="dob" name="User.Dob" class="form-control" required />
                    </div>
                    <!-- Email -->
                    <div class="col-md-6">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" id="email" name="User.Email" class="form-control" placeholder="Enter your email" required />
                        <span class="text-danger" asp-validation-for="User.Email"></span>
                    </div>

                    <!-- Password -->
                    <div class="col-md-6">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" id="password" name="User.PasswordHash" class="form-control" placeholder="Enter your password" required />
                        <small id="password-help" class="form-text text-muted mt-2">
                            Your password should be between 8-16 characters, contain at least one uppercase letter, one number, and one special character.
                        </small>
                        <!-- Real-Time Validation Feedback -->
                        <div id="password-error" class="text-danger" style="display: none;">
                            Password does not meet the requirements.
                        </div>
                        <span class="text-danger" asp-validation-for="User.PasswordHash"></span>
                    </div>


                    <!-- Phone Number -->
                    <div class="col-md-6">
                        <label for="phone" class="form-label">Phone Number</label>
                        <div class="input-group">
                            <select id="countryCode" name="CountryCode" class="form-select" style="max-width: 100px;">
                                @foreach (var country in Model.Countries)
                                {
                                    <option value="@GetCountryCode(country.Country1)">@GetCountryCode(country.Country1)</option>
                                }
                            </select>
                            <input type="tel" id="phone" name="User.PhoneNumber" class="form-control" placeholder="Enter phone number" required />
                        </div>
                    </div>

                    <!-- Preferences Dropdown with Checkboxes -->
                    <div class="form-group mb-4">
                        <label for="preferences" class="form-label">Tourism Preferences</label>
                        <div class="dropdown">
                            <button class="btn btn-primary w-auto" type="button" id="preferencesDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="min-width: 200px;">
                                Select Preferences
                            </button>
                            <ul class="dropdown-menu dropdown-menu-checkbox" aria-labelledby="preferencesDropdown" style="min-width: 200px;">
                                @foreach (var preference in Model.Preferences)
                                {
                                    <li>
                                        <label class="dropdown-item">
                                            <input type="checkbox" name="SelectedPreferences" value="@preference.PreferenceId" />
                                            @preference.PreferenceDescription
                                        </label>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <!-- Country -->
                    <div class="col-md-4">
                        <label for="country" class="form-label">Country</label>
                        <select id="country" name="CountryId" class="form-control">
                            <option value="">Select a country</option>
                            @foreach (var country in Model.Countries)
                            {
                                <option value="@country.CountryId" @(country.CountryId == Model.CountryId ? "selected" : "")>@country.Country1</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-4">
                        <label for="state" class="form-label">State</label>
                        <select id="state" name="StateId" class="form-control">
                            <option value="">Select a state</option>
                            @foreach (var state in Model.States)
                            {
                                <option value="@state.StateId" @(state.StateId == Model.StateId ? "selected" : "")>@state.State1</option>
                            }
                        </select>
                    </div>
                    <!-- City Dropdown -->
                    <div class="col-md-4">
                        <label for="city" class="form-label">City</label>
                        <select id="city" name="CityId" class="form-control" required>
                            <option value="">Select a city</option>
                            @foreach (var city in Model.Cities)
                            {
                                <option value="@city.CityId">@city.City1</option>
                            }
                        </select>
                    </div>
                    <!-- Already Have an Account -->
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <a href="@Url.Action("Login", "Account", new { area = "EndUser"})" class="text-primary">Already have an account? Sign in</a>
                    </div>
                    <!-- Submit Button -->
                    <div class="col-md-12 text-center mt-4">
                        <button type="submit" class="btn btn-primary w-50 py-2 register-button">Register</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    


    <script>
        document.getElementById("country").addEventListener("change", function () {
            const countryId = this.value;
            fetch(`/EndUser/Account/GetStates?countryId=${countryId}`)
                .then(response => response.json())
                .then(states => {
                    const stateDropdown = document.getElementById("state");
                    stateDropdown.innerHTML = '<option value="">Select a state</option>';
                    states.forEach(state => {
                        stateDropdown.innerHTML += `<option value="${state.stateId}">${state.state1}</option>`;
                    });
                });
        });

        document.getElementById("state").addEventListener("change", function () {
            const stateId = this.value;
            fetch(`/EndUser/Account/GetCities?stateId=${stateId}`)
                .then(response => response.json())
                .then(cities => {
                    const cityDropdown = document.getElementById("city");
                    cityDropdown.innerHTML = '<option value="">Select a city</option>';
                    cities.forEach(city => {
                        cityDropdown.innerHTML += `<option value="${city.cityId}">${city.city1}</option>`;
                    });
                });
        });

    </script>
    <script>
        document.getElementById('password').addEventListener('input', function () {
            const password = this.value;
            const errorElement = document.getElementById('password-error');
            const passwordHelp = document.getElementById('password-help');
            const passwordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,16}$/;


            if (!passwordRegex.test(password)) {
                errorElement.style.display = 'block';
                passwordHelp.style.color = 'red';
            } else {
                errorElement.style.display = 'none';
                passwordHelp.style.color = 'inherit';
            }
        });
    </script>

    @functions {
        public string GetCountryCode(string countryName)
        {
            var countryCodes = new Dictionary<string, string>
            {
                { "Lebanon", "+961" },
                { "USA", "+1" },
                { "France", "+33" },
                { "Egypt", "+20" },
                { "Saudi Arabia", "+966" },
                { "Jordan", "+962" },
                { "Canada", "+1" },
                { "UAE", "+971" },
                { "Spain", "+34" },
                { "Italy", "+39" },
                { "Syria", "+963" },
                { "Germany", "+49" },
                { "Mexico", "+52" },
                { "Morocco", "+212" }
            };

            return countryCodes.ContainsKey(countryName) ? countryCodes[countryName] : "";
        }
    }

</body>
</html>
