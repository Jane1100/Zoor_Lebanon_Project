@using Zoor_Lebanon.Models.ViewModels
@model PackageViewModel

@{
    ViewData["Title"] = "Create Package";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Zoor Lebanon - @ViewData["Title"]</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Create New Package</h1>
        <form method="post" asp-action="AddPackage" class="mt-4">
            <!-- Package Name -->
            <div class="mb-3">
                <label for="PackageName" class="form-label">Package Name</label>
                <input type="text" id="PackageName" name="Package.PackageName" class="form-control" required />
                <span asp-validation-for="Package.PackageName" class="text-danger"></span>
            </div>

            <!-- Description -->
            <div class="mb-3">
                <label for="Description" class="form-label">Description</label>
                <textarea id="Description" name="Package.Description" class="form-control" required></textarea>
                <span asp-validation-for="Package.Description" class="text-danger"></span>
            </div>

            <!-- Unit Price -->
            <div class="mb-3">
                <label for="UnitPrice" class="form-label">Unit Price ($)</label>
                <input type="number" id="UnitPrice" name="Package.UnitPrice" class="form-control" step="0.01" required />
                <span asp-validation-for="Package.UnitPrice" class="text-danger"></span>
            </div>

            <!-- Total Spots -->
            <div class="mb-3">
                <label asp-for="Package.TotalSpots" class="form-label">Total Spots</label>
                <input asp-for="Package.TotalSpots" class="form-control" type="number" required />
                <span asp-validation-for="Package.TotalSpots" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Package.StartDate">Start Date</label>
                <input asp-for="Package.StartDate" class="form-control" type="date" required />
                <span asp-validation-for="Package.StartDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Package.EndDate">End Date</label>
                <input asp-for="Package.EndDate" class="form-control" type="date" required />
                <span asp-validation-for="Package.EndDate" class="text-danger"></span>
            </div>


            <!-- Average Duration -->
            <div class="mb-3">
                <label for="AverageDuration" class="form-label">Average Duration (hours)</label>
                <input type="number" id="AverageDuration" name="Package.AverageDuration" class="form-control" step="0.01" required />
                <span asp-validation-for="Package.AverageDuration" class="text-danger"></span>
            </div>

            <!-- State Dropdown -->
            <div class="mb-3">
                <label for="State" class="form-label">State</label>
                <select id="State" name="State" class="form-select" required>
                    <option value="">Select State</option>
                    @foreach (var state in Model.States)
                    {
                        <option value="@state">@state</option>
                    }
                </select>
                <span asp-validation-for="State" class="text-danger"></span>
            </div>

            <!-- City Dropdown -->
            <div class="mb-3">
                <label for="City" class="form-label">City</label>
                <select id="City" name="City" class="form-select" required>
                    <option value="">Select City</option>
                </select>
                <span asp-validation-for="City" class="text-danger"></span>
            </div>

            <!-- Package Type Dropdown -->
            <div class="mb-3">
                <label for="PackageType" class="form-label">Package Type</label>
                <select id="PackageType" name="Package.PackageTypeId" class="form-select" required>
                    <option value="">Select Package Type</option>
                    @foreach (var type in Model.PackageTypes)
                    {
                        <option value="@type.PackageTypeId">@type.PackageType1</option>
                    }
                </select>
                <span asp-validation-for="Package.PackageTypeId" class="text-danger"></span>
            </div>

            <!-- Hidden LocationId -->
            <input type="hidden" id="LocationId" name="Package.LocationId" />

            <button type="submit" class="btn btn-primary w-100">Create Package</button>
        </form>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Populate City dropdown based on selected State
            $('#State').change(function () {
                var state = $(this).val();
                if (state) {
                    $.getJSON('/Admin/Package/GetCitiesByState?state=' + encodeURIComponent(state), function (cities) {
                        var cityDropdown = $('#City');
                        cityDropdown.empty();
                        cityDropdown.append('<option value="">Select City</option>');
                        $.each(cities, function (index, city) {
                            cityDropdown.append('<option value="' + city + '">' + city + '</option>');
                        });
                    });
                }
            });

            // Fetch LocationId based on selected State and City
            $('#City').change(function () {
                var city = $(this).val();
                var state = $('#State').val();
                if (city && state) {
                    $.getJSON('/Admin/Package/GetLocationId?state=' + encodeURIComponent(state) + '&city=' + encodeURIComponent(city), function (locationId) {
                        $('#LocationId').val(locationId);
                    });
                }
            });
        });
         document.addEventListener("DOMContentLoaded", function () {
        const startDateInput = document.querySelector("[name='Package.StartDate']");
        const endDateInput = document.querySelector("[name='Package.EndDate']");

        startDateInput.addEventListener("change", function () {
            const selectedDate = this.value;
            endDateInput.min = selectedDate; // Ensure end_date is not before start_date
        });
    });
    </script>
</body>
</html>
